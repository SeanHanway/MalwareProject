import os
import pathlib
import re


class PluginManager:
    CONST_RUN = 1
    CONST_AUTORUN = 2
    CONST_UNDO = 3

    def __init__(self, plugin_dir: str):
        self.__plugin_list = self.__set_plugins(plugin_dir)
        self.__plugind_dir = plugin_dir

    # def deployPlugin(self, plugin):

    '''
    internal method to generate the plugins list
    '''
    @staticmethod
    def __set_plugins(plugin_dir: str) -> list:
        plugins = []

        try:
            tgt_path = pathlib.Path(plugin_dir)

            # iterate through the plugin directory.
            for entry in tgt_path.iterdir():

                # if a Directory is found, assume it is a plugin.
                if entry.is_dir():
                    plugin_name = entry.name

                    # search for the main.py file.
                    for plugin_file in entry.iterdir():
                        if plugin_file.name.__eq__("main.py"):
                            # After finding the main.py file we can assume the plugin is valid and add it.
                            plugins.append(plugin_name)

        except Exception as e:
            print("Error building plugin list. " + e.__str__())

        return plugins

    '''
    Returns a list of plugin names
    '''
    def get_plugins(self) -> list:
        return self.__plugin_list

    '''
    Runs a plugin given the plugin's name and run type.
    Use class constants for run_type. CONST_RUN | CONST_AUTORUN | CONST_UNDO
    '''
    def run_plugin(self, plugin_name: str, run_type: int):
        executable = ''

        if run_type == self.CONST_RUN:
            executable = 'main.exe'
        elif run_type == self.CONST_AUTORUN:
            executable = 'main_auto.exe'
        elif run_type == self.CONST_UNDO:
            executable = 'main_undo.exe'

        plugin_loc = self.__plugind_dir + '\\' + plugin_name + '\\' + executable

        try:
            os.startfile(plugin_loc)

        except Exception as e:
            print("Error running plugin " + plugin_loc + " " + e.__str__())
